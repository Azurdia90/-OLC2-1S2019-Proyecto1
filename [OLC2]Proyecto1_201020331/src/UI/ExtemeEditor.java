/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Cristian Azurdia
 */
public class ExtemeEditor extends javax.swing.JFrame {
    
    private ArrayList<ObjetoEntrada> lista_objetos_entrada;
    private ObjetoEntrada entrada_actual;  
    
    public ExtemeEditor() {        
        initComponents();
        lista_objetos_entrada = new ArrayList<ObjetoEntrada>();
        this.agregar_pestaña();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        jTPEntrada = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTPConsola = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMArchivo = new javax.swing.JMenu();
        jMIAbrir = new javax.swing.JMenuItem();
        jMIGuardar = new javax.swing.JMenuItem();
        jMIGuardarComo = new javax.swing.JMenuItem();
        jMPestañas = new javax.swing.JMenu();
        jMINuevaPestaña = new javax.swing.JMenuItem();
        jMICerrarPestaña = new javax.swing.JMenuItem();
        jMEjecutar = new javax.swing.JMenu();
        jMErrores = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jSplitPane2.setDividerLocation(250);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jTPEntrada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTPEntradaMouseClicked(evt);
            }
        });
        jSplitPane2.setLeftComponent(jTPEntrada);

        jTPConsola.setBackground(new java.awt.Color(0, 0, 0));
        jTPConsola.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTPConsola.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jTPConsola.setForeground(new java.awt.Color(102, 255, 102));
        jScrollPane1.setViewportView(jTPConsola);

        jSplitPane2.setRightComponent(jScrollPane1);

        jMArchivo.setText("Archivo");

        jMIAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMIAbrir.setText("Abrir");
        jMIAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIAbrirActionPerformed(evt);
            }
        });
        jMArchivo.add(jMIAbrir);

        jMIGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMIGuardar.setText("Guardar");
        jMIGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIGuardarActionPerformed(evt);
            }
        });
        jMArchivo.add(jMIGuardar);

        jMIGuardarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMIGuardarComo.setText("Guardar Como...");
        jMIGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIGuardarComoActionPerformed(evt);
            }
        });
        jMArchivo.add(jMIGuardarComo);

        jMenuBar1.add(jMArchivo);

        jMPestañas.setText("Pestañas");

        jMINuevaPestaña.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMINuevaPestaña.setText("Nueva Pestaña");
        jMINuevaPestaña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMINuevaPestañaActionPerformed(evt);
            }
        });
        jMPestañas.add(jMINuevaPestaña);

        jMICerrarPestaña.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMICerrarPestaña.setText("Cerrar Pestaña");
        jMPestañas.add(jMICerrarPestaña);

        jMenuBar1.add(jMPestañas);

        jMEjecutar.setText("Ejecutar");
        jMEjecutar.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMEjecutarMenuSelected(evt);
            }
        });
        jMEjecutar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMEjecutarMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMEjecutar);

        jMErrores.setText("Errores");
        jMenuBar1.add(jMErrores);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMEjecutarMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMEjecutarMenuSelected
        actualizar_entrada();
    }//GEN-LAST:event_jMEjecutarMenuSelected

    private void jMEjecutarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMEjecutarMouseClicked
                
        if(!entrada_actual.getJTEntrada().getText().equalsIgnoreCase(""))
        {
            compilar_entrada();
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Ingrese un texto");
        }
    }//GEN-LAST:event_jMEjecutarMouseClicked

    private void jMIAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIAbrirActionPerformed
        abrir_archivo();
    }//GEN-LAST:event_jMIAbrirActionPerformed

    private void jMIGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIGuardarActionPerformed
        if(entrada_actual.getGuardar_como())
        {
            guardar_como_archivo();            
        }
        else
        {
            guardar_archivo();
        }
    }//GEN-LAST:event_jMIGuardarActionPerformed

    private void jMIGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIGuardarComoActionPerformed
        guardar_como_archivo();
    }//GEN-LAST:event_jMIGuardarComoActionPerformed

    private void jMINuevaPestañaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMINuevaPestañaActionPerformed
        agregar_pestaña();
    }//GEN-LAST:event_jMINuevaPestañaActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        actualizar_entrada();
    }//GEN-LAST:event_formMouseClicked

    private void jTPEntradaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPEntradaMouseClicked
        actualizar_entrada();
    }//GEN-LAST:event_jTPEntradaMouseClicked
    
    public void actualizar_entrada()
    {
        int pos_actual = this.jTPEntrada.getSelectedIndex();
        entrada_actual = lista_objetos_entrada.get(pos_actual);
    }
    
    public void agregar_pestaña()
    {
        //agregar el nuevo panel a la pestaña
        entrada_actual = new ObjetoEntrada();
        lista_objetos_entrada.add(entrada_actual);
        
        entrada_actual.setConsola(jTPConsola);
        entrada_actual.setPath_archivo(System.getProperty("user.dir"));
        entrada_actual.setNombre_archivo("Nuevo_archivo_" + jTPEntrada.getComponentCount());
        int seleccion = JOptionPane.showOptionDialog(this,"Seleccione opcion", "Selector de tipo de archivo",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null, new Object[] { "GXML gxml", "FunctionScript fs"}, "opcion 1");
        if (seleccion == 0)
        {
            entrada_actual.setExtesion_archivo("gxml");
        }
        else if(seleccion == 1)
        {
            entrada_actual.setExtesion_archivo("fs");
        }
        else
        {
            entrada_actual.setExtesion_archivo("fs");
        }
        jTPEntrada.addTab("Nuevo_Archivo_" + jTPEntrada.getComponentCount() , new JScrollPane(entrada_actual.getJTEntrada()));
        jTPEntrada.setSelectedIndex(jTPEntrada.getComponentCount()- 1);        
    }
    
    private void abrir_archivo()
    { 
        String aux="";   
        String texto="";
        try
        {
            /**llamamos el metodo que permite cargar la ventana*/
            JFileChooser selectorArchivos = new JFileChooser();
            selectorArchivos.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos CREATOR XML (gxml,fs)", "gxml" ,"fs");
            selectorArchivos.setFileFilter(filtro);
            selectorArchivos.showOpenDialog(this);
            
            /**abrimos el archivo seleccionado*/
            File archivo = selectorArchivos.getSelectedFile();            
            /**recorremos el archivo, lo leemos para plasmarlo
            *en el area de texto*/
            if(archivo!=null)
            {     
                entrada_actual.setPath_archivo(archivo.getAbsolutePath().substring(0, archivo.getAbsolutePath().length() - archivo.getName().length()));                     
                
                if(archivo.getName().substring(archivo.getName().length() - 2, archivo.getName().length()).equalsIgnoreCase("fs"))
                {
                    entrada_actual.setNombre_archivo(archivo.getName().substring(0, archivo.getName().length() - 3));                
                    entrada_actual.setExtesion_archivo(archivo.getName().substring(archivo.getName().length() - 2, archivo.getName().length()));   
                }
                else if(archivo.getName().substring(archivo.getName().length() - 4, archivo.getName().length()).equalsIgnoreCase("gxml"))
                {
                    entrada_actual.setNombre_archivo(archivo.getName().substring(0, archivo.getName().length() - 5));                
                    entrada_actual.setExtesion_archivo(archivo.getName().substring(archivo.getName().length() - 4, archivo.getName().length()));   
                }
                
                jTPEntrada.setTitleAt(jTPEntrada.getSelectedIndex(),archivo.getName());
                entrada_actual.setGuardar_como(false);
                FileReader archivo_leido = new FileReader(archivo);
                BufferedReader lee=new BufferedReader(archivo_leido);
                while((aux=lee.readLine())!=null)
                {
                    texto+= aux+ "\n";
                }
                lee.close();
                entrada_actual.getJTEntrada().setText(texto);
            }    
        }
        catch(IOException ex)
        {
           JOptionPane.showMessageDialog(null,ex+"" +
                 "\nNo se ha encontrado el archivo",
                       "ADVERTENCIA!!!",JOptionPane.WARNING_MESSAGE);
        }
    }

    public void guardar_archivo()
    {
        FileWriter archivo_dasm = null;
        PrintWriter escritor_dasm = null;
        try
        {            
            archivo_dasm = new FileWriter(entrada_actual.getPath_archivo() + entrada_actual.getNombre_archivo() + "." + entrada_actual.getExtesion_archivo());
            escritor_dasm = new PrintWriter(archivo_dasm);
        }
        catch(Exception e)
        {            
            JOptionPane.showMessageDialog(null,"error al generar archivo: " + e.getMessage());
            try
            {
                if(archivo_dasm != null)
                {
                    archivo_dasm.close();
                }
            }            
            catch(Exception e2)
            {
                JOptionPane.showMessageDialog(null,"error al cerrar archivo: " + e2.getMessage());
            }            
        }
    }
    
    public void guardar_como_archivo()
    {
        try
        {
         String nombre="";
         JFileChooser file=new JFileChooser();
         file.showSaveDialog(this);
         File guarda =file.getSelectedFile();

         if(guarda !=null)
         {
          /*guardamos el archivo y le damos el formato directamente,
           * si queremos que se guarde en formato doc lo definimos como .doc*/
           FileWriter  save = new FileWriter(guarda + "." + entrada_actual.getExtesion_archivo());
           save.write(entrada_actual.getJTEntrada().getText());
           save.close();
           entrada_actual.setGuardar_como(false);
           JOptionPane.showMessageDialog(null,
                "El archivo se a guardado Exitosamente",
                    "Información",JOptionPane.INFORMATION_MESSAGE);
           }
        }
        catch(IOException ex)
        {
          JOptionPane.showMessageDialog(null,
               "Su archivo no se ha guardado",
                  "Advertencia",JOptionPane.WARNING_MESSAGE);
        }        
    }
    
    public void compilar_entrada()
    {
        try
        {
            this.jTPConsola.setText("");
            ERRORES.Tabla_Errores.getInstance().clear();
            FS_TABLA_SIMBOLOS.Tabla_Simbolos.getInstance().Limpiar();  
            
            if(entrada_actual.getExtesion_archivo().equalsIgnoreCase("fs"))
            {
                FS_ANALIZADORES.Lexico_FS lexico_fs = new FS_ANALIZADORES.Lexico_FS(new BufferedReader(new StringReader(entrada_actual.getJTEntrada().getText().toString())));
                FS_ANALIZADORES.Sintactico_FS sintactico_fs = new FS_ANALIZADORES.Sintactico_FS(lexico_fs);
                sintactico_fs.setObjetoEntrada(entrada_actual);
                sintactico_fs.setImportar(false);
                sintactico_fs.parse();
            }
            else if(entrada_actual.getExtesion_archivo().equalsIgnoreCase("gxml"))
            {
                GXML_ANALIZADORES.Lexico_GXML lexico_gxml = new GXML_ANALIZADORES.Lexico_GXML(new BufferedReader(new StringReader(entrada_actual.getJTEntrada().getText().toString())));
                GXML_ANALIZADORES.Sintactico_GXML sintactico_gxml = new GXML_ANALIZADORES.Sintactico_GXML(lexico_gxml);
                sintactico_gxml.setObjetoEntrada(entrada_actual);
                sintactico_gxml.setImportar(false);
                sintactico_gxml.setTraducir(true);
                sintactico_gxml.parse();                
            }
            else
            {
                //JOptionPane.showMessageDialog(rootPane, "Holis!!");
                JOptionPane.showMessageDialog(this,"EXTESION DE ARCHIVO NO RECONOCIDA");
            }

            if(ERRORES.Tabla_Errores.getInstance().size() > 0)
            {
                ERRORES.Ventana_Errores mostrar_error = new ERRORES.Ventana_Errores();
                mostrar_error.show();
            }                  
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"error: " + e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExtemeEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExtemeEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExtemeEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExtemeEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExtemeEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMArchivo;
    private javax.swing.JMenu jMEjecutar;
    private javax.swing.JMenu jMErrores;
    private javax.swing.JMenuItem jMIAbrir;
    private javax.swing.JMenuItem jMICerrarPestaña;
    private javax.swing.JMenuItem jMIGuardar;
    private javax.swing.JMenuItem jMIGuardarComo;
    private javax.swing.JMenuItem jMINuevaPestaña;
    private javax.swing.JMenu jMPestañas;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextPane jTPConsola;
    private javax.swing.JTabbedPane jTPEntrada;
    // End of variables declaration//GEN-END:variables
}
